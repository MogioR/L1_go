package main

import (
	"fmt"
	"strings"
)

/*
	–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤
	—Å—Ç—Ä–æ–∫–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ (true ‚Äî –µ—Å–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ, false etc). –§—É–Ω–∫—Ü–∏—è
	–ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π.

	–ù–∞–ø—Ä–∏–º–µ—Ä:
	abcd ‚Äî true
	abCdefAaf ‚Äî false
	aabcd ‚Äî false
*/

func unique(s string) bool {
	//–ü–µ—Ä–µ–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Ä—É–Ω—ã
	runes := []rune(strings.ToLower(s))

	//—Å–∏–º–≤–æ–ª—ã
	runesSet := make(map[rune]struct{})

	//–î–æ–±–æ–≤–ª—è–µ–º —Ä—É–Ω—ã –≤ –∫–∞—Ä—Ç—É
	for _, ch := range runes {
		//–ï—Å–ª–∏ —Ä—É–Ω–∞ –≤ –∫–∞—Ä—Ç–µ —Ç–æ –ø–æ–≤—Ç–æ—Ä
		if _, ok := runesSet[ch]; ok {
			return false
		}
		runesSet[ch] = struct{}{}
	}

	return true
}

func main() {
	fmt.Println(unique("abcd"))      //Out: true
	fmt.Println(unique("abCdefAaf")) //Out: false
	fmt.Println(unique("aabcd"))     //Out: false
	fmt.Println(unique("aAbcd"))     //Out: false
	fmt.Println(unique("aüòåbcd"))     //Out: true
}
